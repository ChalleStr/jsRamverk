{"version":3,"sources":["Chat/Chat.js","charlottestrand.jpg","Me.js","Reports.js","Token.js","UpdateReport.js","Register.js","Login.js","Addreport.js","ShowReport.js","Chat/TextContainer.js","Chat/Message.js","Chat/Messages.js","Chat/InfoBar.js","Chat/Input.js","Chat/ChatJoin.js","App.js","serviceWorker.js","index.js"],"names":["socket","Me","useState","message","setMessage","useEffect","fetch","then","res","json","about","className","src","picture","alt","Reports","props","state","kmom","handleSubmit","bind","handleInputChange","event","this","setState","target","name","type","parseInt","value","preventDefault","history","push","Form","onSubmit","Group","controlId","Label","Control","onChange","Button","variant","React","Component","token","UpdateReport","week_nr","kmom_text","handleChange","handleUpdateClick","console","log","method","headers","body","JSON","stringify","response","result","data","error","catch","window","alert","required","as","rows","onClick","RegisterForm","email","password","placeholder","LoginForm","err","AddReport","status","ShowReport","match","params","text","setText","source","TextContainer","users","map","key","Message","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","timeStamp","Date","getHours","getMinutes","getSeconds","ReactEmoji","emojify","Messages","messages","i","InfoBar","room","href","Input","sendMessage","onKeyPress","Chat","location","setName","setRoom","setUsers","setMessages","flag","setFlag","queryString","parse","search","io","emit","on","to","ChatJoin","App","Navbar","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","exact","path","component","Boolean","hostname","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dab50432.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { Redirect } from \"react-router\";\n\nimport TextContainer from \"./TextContainer\";\nimport Messages from \"./Messages\";\nimport InfoBar from \"./InfoBar\";\nimport Input from \"./Input\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [users, setUsers] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [flag, setFlag] = useState(0);\n\n    //const url = \"http://localhost:8300\";\n    const url = \"https://socket-server.charlottestrand.me\";\n    // const socket = io(url, {\n    //     withCredentials: true,\n    //     extraHeaders: {\n    //         \"Access-Control-Allow-Origin\": \"https://socket-server.charlottestrand.me\"\n    //     }\n    // })\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n\n        socket = io(url);\n            //method: \"POST\",\n        //     withCredentials: true,\n        //     extraHeaders: {\n        //         \"Content-Type\": \"application/json\",\n        //         \"Access-Control-Allow-Origin\": \"*\"\n        //     },\n        // });\n\n        setRoom(room);\n        setName(name);\n\n        socket.emit(\"join\", { name, room }, (error) => {\n            if (error) {\n                setFlag(1);\n                alert(error);\n            }\n        });\n    }, [location.search]);\n\n    useEffect(() => {\n        socket.on(\"message\", message => {\n            setMessages(messages => [ ...messages, message ]);\n        });\n\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n        });\n    }, []);\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if (message) {\n            socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n\n        }\n    }\n\n    if (flag) {\n        console.log(\"flag\");\n        return (\n            <Redirect to=\"/chat\" />\n        )\n    }\n\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"chatContainer\">\n                <InfoBar room={room} />\n                <Messages messages={messages} name={name}/>\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n            </div>\n        <TextContainer users={users} />\n        </div>\n    );\n}\n\nexport default Chat;\n","export default __webpack_public_path__ + \"static/media/charlottestrand.e60f8d2b.jpg\";","import React, { useEffect, useState } from 'react';\nimport picture from './charlottestrand.jpg';\n\nconst Me = () => {\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"https://me-api.charlottestrand.me/\")\n        //fetch(\"http://localhost:1337/\")\n        .then(res => res.json())\n        .then(res => setMessage(res.about));\n    });\n\n    return (\n        <main>\n            <div className=\"container\">\n                <img className=\"img-me\" src={picture} alt=\"Charlotte\"/>\n                <div className=\"me-div\">\n                    <h1>Om mig</h1>\n                        <p>{message}</p>\n                </div>\n            </div>\n        </main>\n    );\n};\n\nexport default Me;\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\"\n\nclass Reports extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            kmom: \"\"\n        };\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({\n            [event.target.name]: event.target.type === \"number\" ? parseInt(event.target.value) : event.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.props.history.push('/reports/week/' + this.state.kmom);\n    }\n\n    render() {\n        return (\n                <main>\n                    <div className=\"container\">\n                        <div className=\"me-div\">\n                            <h3>Show reports</h3>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group controlId=\"formBasicNumber\">\n                                    <Form.Label>Week:</Form.Label>\n                                    <Form.Control type=\"number\" name=\"kmom\" onChange={this.handleInputChange} />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">Get report</Button>\n                            </Form>\n                        </div>\n                    </div>\n                </main>\n            );\n    }\n};\n\nexport default Reports;\n","let token = {\n    token: \"\"\n}\n\nexport { token };\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\"\nimport Button from 'react-bootstrap/Button';\nimport { token } from \"./Token.js\";\n\nclass UpdateReport extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            week_nr: \"\",\n            kmom_text: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleUpdateClick = this.handleUpdateClick.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.type === \"number\" ? parseInt(event.target.value) : event.target.value\n        });\n    }\n\n    handleUpdateClick() {\n        this.props.history.push(\"/reports/add\");\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n        console.log(token.token);\n\n        fetch(\"https://me-api.charlottestrand.me/reports/update\", {\n        //fetch(\"http://localhost:1337/reports/update\", {\n            method: \"PUT\",\n            headers: {\n                \"x-access-token\": token.token,\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n            },\n            body: JSON.stringify({\n                week_nr: this.state.week_nr,\n                kmom_text: this.state.kmom_text\n            })\n        }).then(response => {\n            return response.json();\n        }).then(result => {\n            if(result.data) {\n                console.log(\"Rapporten är uppdaterad!\")\n                this.props.history.push(\"/reports/week/\" + this.state.week_nr);\n            } else if (result.error) {\n                console.log(result.error);\n            }\n        }).catch(error => {\n            window.alert(\"There is no report with this week number!\")\n            console.log(\"Error:\", error.message);\n        });\n    }\n\n    render() {\n        return (\n                <main>\n                    <div className=\"container\">\n                        <div className=\"me-div\">\n                            <h4>Update report</h4>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group controlId=\"formBasicNumber\">\n                                    <Form.Label>Choose a week (number):</Form.Label>\n                                    <Form.Control type=\"number\" name=\"week_nr\" onChange={this.handleChange} required />\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Text:</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"30\" name=\"kmom_text\" onChange={this.handleChange} required />\n                                </Form.Group>\n                                <Button className=\"my-button\" variant=\"secondary\" onClick={this.handleUpdateClick}>Go back</Button>{\" \"}\n                                <Button variant=\"primary\" type=\"submit\">Update</Button>\n                            </Form>\n                        </div>\n\n                    </div>\n                </main>\n            );\n    }\n}\n\n\nexport default UpdateReport;\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\";\n//import { useInput } from \"./hooks/input-hook\";\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        var value = target.value;\n        const name = target.name;\n\n        this.setState({[name]: value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n        console.log(this.state.email);\n        console.log(this.state.password);\n\n\n        fetch(\"https://me-api.charlottestrand.me/register/\", {\n        //fetch(\"http://localhost:1337/register/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        })\n        .then(res => res.json())\n        .then(data => this.setState)\n    }\n\n    render() {\n        return (\n                <main>\n                    <div className=\"container\">\n                        <div className=\"me-div\">\n                            <h3>Register new user</h3>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>E-mail:</Form.Label>\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleInputChange} required />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password:</Form.Label>\n                                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInputChange} required />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">Register</Button>\n                            </Form>\n                        </div>\n                    </div>\n                </main>\n            );\n    }\n\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\"\nimport { token } from \"./Token.js\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n        };\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const { value, name } = event.target;\n\n        this.setState({[name]: value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n        console.log(this.state.email);\n        console.log(this.state.password);\n\n        fetch(\"https://me-api.charlottestrand.me/login/\", {\n        //fetch(\"http://localhost:1337/login/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        })\n        .then(response => response.json())\n        .then(res => {\n            console.log(res.data.token);\n            token.token = res.data.token;\n            this.props.history.push('/reports/add');\n        })\n        .catch((err) => {\n            console.error(err);\n            console.log(\"Error logging in.\");\n        })\n\n    }\n\n    render() {\n        return (\n                <main>\n                    <div className=\"container\">\n                        <div className=\"me-div\">\n                            <h3>Admin login</h3>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>E-mail:</Form.Label>\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleInputChange} required />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password:</Form.Label>\n                                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInputChange} required />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">Login</Button>\n                            </Form>\n                        </div>\n                    </div>\n                </main>\n            );\n    }\n\n    // render() {\n    //     return (\n    //             <main>\n    //                 <div className=\"container\">\n    //                     <div className=\"me-div\">\n    //                         <h3>Logga in</h3>\n    //                         <form onSubmit={this.handleSubmit}>\n    //                             <label>\n    //                                 E-mail:\n    //                                 <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} required />\n    //                             </label>\n    //                             <label>\n    //                                 Password:\n    //                                 <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} required />\n    //                             </label>\n    //                             <input type=\"submit\" value=\"Submit\" />\n    //                         </form>\n    //                     </div>\n    //                 </div>\n    //             </main>\n    //         );\n    // }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from \"react-bootstrap/Form\"\nimport { token } from \"./Token.js\";\n\n\nclass AddReport extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            week_nr: \"\",\n            kmom_text: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleUpdateClick = this.handleUpdateClick.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.type === \"number\" ? parseInt(event.target.value) : event.target.value\n        });\n    }\n\n    handleUpdateClick() {\n        this.props.history.push(\"/reports/update\");\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n        console.log(token.token);\n\n        fetch(\"https://me-api.charlottestrand.me/reports/add\", {\n        //fetch(\"http://localhost:1337/reports/add\", {\n            method: \"POST\",\n            headers: {\n                \"x-access-token\": token.token,\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n\n            },\n            body: JSON.stringify({\n                week_nr: this.state.week_nr,\n                kmom_text: this.state.kmom_text\n            })\n        })\n        .then(res => {\n            if (res.status === 201) {\n                console.log(\"Det funkade!\");\n                this.props.history.push('/reports/week/' + this.state.week_nr);\n            } else {\n                this.setState({status: \"Funkade ej\"})\n            }\n        })\n        .catch((error) => {\n            window.alert(\"This week number already exists! Choose another number.\")\n            console.error(\"Error: \", error);\n        });\n    }\n\n    render() {\n        return (\n                <main>\n                    <div className=\"container\">\n                        <div className=\"me-div\">\n                            <h2>Welcome!</h2>\n                            <p>To update an existing report, click here:\n                            {\"  \"}<Button variant=\"secondary\" onClick={this.handleUpdateClick}>Update reports</Button>\n                            </p>\n                            <h4>New report</h4>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group controlId=\"formBasicNumber\">\n                                    <Form.Label>Week (number):</Form.Label>\n                                    <Form.Control type=\"number\" name=\"week_nr\" onChange={this.handleChange} required />\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Text:</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"30\" name=\"kmom_text\" onChange={this.handleChange} required />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                                </Button>\n                            </Form>\n                        </div>\n                    </div>\n                </main>\n            );\n    }\n\n}\n\nexport default AddReport;\n","import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\n\n\nconst ShowReport = ({ match }) => {\n    const kmom = match.params.kmom;\n    const [text, setText] = useState(\"\");\n\n    useEffect(() => {\n        fetch(`https://me-api.charlottestrand.me/reports/week/${kmom}`)\n        //fetch(`http://localhost:1337/reports/week/${kmom}`)\n            .then(res => res.json())\n            .then(res => {\n                setText(res.data.kmom_text)\n            }).catch(error => {\n                window.alert(\"There is no report with this week number!\");\n                console.log(\"No report data:\", error.message);\n                });\n    });\n\n    return (\n        <main>\n            <div className=\"container\">\n                <h2><strong>Week {kmom}</strong></h2>\n                <div className=\"content\">\n                    <ReactMarkdown source={text} />\n                </div>\n\n            </div>\n        </main>\n    );\n};\n\nexport default ShowReport;\n","import React from \"react\";\n\nconst TextContainer = ({ users }) => (\n    <div className=\"textContainer\">\n        <div>\n            <h1>Welcome!</h1>\n        </div>\n        {\n            users\n                ? (\n                    <div>\n                        <h1>Online users:</h1>\n                        <div className=\"activeContainer\">\n                            <h2>\n                                {users.map(({name}) => (\n                                    <div key={name} className=\"activeItem\">\n                                        {name}\n                                    </div>\n                                ))}\n                            </h2>\n                        </div>\n                    </div>\n                )\n                : null\n        }\n\n    </div>\n);\n\nexport default TextContainer;\n","import React from \"react\";\n\nimport ReactEmoji from \"react-emoji\";\n\nconst Message = ({ message: { text, user }, name }) => {\n    let isSentByCurrentUser = false;\n\n    const trimmedName = name.trim().toLowerCase();\n    // const year = new Date().getFullYear();\n    // const months\n    // const month = new Date().getMonth();\n    // const date = new Date().getDate();\n    const hour = new Date().getHours();\n    const min = new Date().getMinutes();\n    const sec = new Date().getSeconds();\n    const timeStamp = \"Sent\" + hour + \":\" + min + \":\" + sec;\n\n    if (user === trimmedName) {\n        isSentByCurrentUser = true;\n    }\n\n    return (\n        isSentByCurrentUser ? (\n            <div className=\"messageContainer\">\n                <p className=\"sentText\">{trimmedName}</p>\n                <div className=\"messageBox\">\n                    <p className=\"messageText\">{ReactEmoji.emojify(text)}</p>\n                    <p className=\"timeStamp\">{timeStamp}</p>\n                </div>\n            </div>\n        )\n        : (\n            <div className=\"messageContainer\">\n                <div className=\"messageBox\">\n                    <p className=\"messageText\">{ReactEmoji.emojify(text)}</p>\n\n                </div>\n                <p className=\"sentText\">{user}</p>\n            </div>\n        )\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nconst Messages = ({messages, name}) => (\n\n    //console.log(messages);\n    <ScrollToBottom className=\"messages\" >\n        {messages.map((message, i) => <div key={i}><Message message={message} name={name} /></div>)}\n    </ScrollToBottom>\n)\n\nexport default Messages;\n","import React from \"react\";\n\nconst InfoBar = ({room}) => (\n    <div className=\"infoBar\">\n        <div className=\"leftInnerContainer\">\n            <h3>{room}</h3>\n        </div>\n        <div className=\"rightInnerContainer\">\n            <a className=\"closeChatButton\" href=\"/chat\">Close chat</a>\n        </div>\n    </div>\n)\n\nexport default InfoBar;\n","import React from \"react\";\n\nconst Input = ({message, setMessage, sendMessage}) => (\n    <form className=\"form\">\n        <input className=\"input\" placeholder=\"Say something...\"\n        value={message}\n        onChange={(event) => setMessage(event.target.value)}\n        onKeyPress={event => event.key===\"Enter\" ? sendMessage(event) : null} />\n        <button className=\"sendButton\" onClick={(event) => sendMessage(event)}>Send</button>\n    </form>\n)\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatJoin = () => {\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n\n    return (\n        <div className=\"joinOuterContainer\">\n            <div className=\"joinInnerContainer\">\n                <h1 className=\"heading\">Join chat</h1>\n                <input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n                <input placeholder=\"Room\" className=\"joinRoom\" type=\"text\" onChange={(event) => setRoom(event.target.value)} />\n                <Link onClick={event => (!name || !room) ? event.preventDefault() : null} to={`chat/join?name=${name}&room=${room}`}>\n            <button className={\"button-chat\"} type=\"submit\">Sign in</button>\n            </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatJoin;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport Me from './Me.js';\nimport Reports from './Reports.js';\nimport UpdateReport from './UpdateReport.js';\nimport RegisterForm from './Register.js';\nimport LoginForm from './Login.js';\nimport AddReport from './Addreport.js';\nimport ShowReport from './ShowReport.js';\nimport Chat from './Chat/Chat.js';\nimport ChatJoin from './Chat/ChatJoin.js';\n\nconst App = () => (\n    <Router>\n        <Navbar className=\"navbar\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Charlotte</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"navbar\">\n                <Nav.Link className=\"navbar-link\" href=\"/\">Hem</Nav.Link>\n                <Nav.Link href=\"/\">Me</Nav.Link>\n                <Nav.Link href=\"/reports/show\">Reports</Nav.Link>\n                <Nav.Link href=\"/register\">Register</Nav.Link>\n                <Nav.Link href=\"/login\">Login</Nav.Link>\n                <Nav.Link href=\"/chat\">Chat</Nav.Link>\n\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n    <Route exact path=\"/\" component={Me} />\n    <Route path=\"/reports/show\" component={Reports} />\n    <Route path=\"/reports/add\" component={AddReport} />\n    <Route path=\"/reports/update\" component={UpdateReport} />\n    <Route path=\"/reports/week/:kmom\" component={ShowReport} />\n    <Route path=\"/register\" component={RegisterForm} />\n    <Route path=\"/login\" component={LoginForm} />\n    <Route path=\"/chat/join\" component={Chat} />\n    <Route path=\"/chat\" component={ChatJoin} />\n    </Router>\n\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { Provider } from 'react-redux';\n//import {store} from './store';\nimport App from './App.js';\nimport './custom.scss';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n// function Hi() {\n//     return <div>Hello World!</div>;\n// }\n\nReactDOM.render(<App/>, document.querySelector('#home'));\n//\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}